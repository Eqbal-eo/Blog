<!DOCTYPE html>
<html lang="ar" dir="rtl">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>الإشعارات | مدونات آفاق</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/js/css/dashboard.css">
    <link rel="stylesheet" href="/js/css/notifications.css">
    <link rel="stylesheet" href="/js/css/footer.css">
</head>

<body>
    <%- include('./partials/header') %>

        <main>
            <div class="container my-4">
                <div class="notifications-box fadeIn">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h3>
                            <strong>الإشعارات</strong>
                            <% if (unreadCount> 0) { %>
                                <span class="badge bg-danger">
                                    <%=unreadCount%>
                                </span>
                                <% } %>
                        </h3>
                        <% if (notifications.length> 0) { %>
                            <button id="markAllRead" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-check2-all"></i> تحديد الكل كمقروء
                            </button>
                            <% } %>
                    </div>

                    <% if (notifications.length> 0) { %>
                        <div class="notification-list">
                            <% notifications.forEach(function(notification) { %>
                                <div class="notification-item <%= !notification.is_read ? 'unread' : '' %>"
                                    data-id="<%= notification.id %>">
                                    <div class="notification-content">
                                        <div class="notification-icon">
                                            <% if (notification.type==='post_rejected' ) { %>
                                                <i class="bi bi-x-circle text-danger"></i>
                                                <% } else if (notification.type==='post_approved' ) { %>
                                                    <i class="bi bi-check-circle text-success"></i>
                                                    <% } else { %>
                                                        <i class="bi bi-bell"></i>
                                                        <% } %>
                                        </div>
                                        <div class="notification-text">
                                            <p>
                                                <%= notification.message %>
                                            </p>
                                            <small class="text-muted">
                                                <i class="bi bi-clock"></i>
                                                <%= new Date(notification.created_at).toLocaleDateString('ar-SA', {
                                                    year: 'numeric' , month: 'long' , day: 'numeric' , hour: '2-digit' ,
                                                    minute: '2-digit' }) %>
                                            </small>
                                        </div>
                                    </div>

                                    <div class="notification-actions">
                                        <% if (notification.post_id && notification.type==='post_rejected' ) { %>
                                            <a href="/posts/edit/<%= notification.post_id %>"
                                                class="btn btn-sm btn-outline-primary">
                                                تعديل المنشور
                                            </a>
                                            <% } else if (notification.post_id && notification.type==='post_approved' )
                                                { %>
                                                <a href="/post/<%= notification.post_id %>"
                                                    class="btn btn-sm btn-outline-success">
                                                    عرض المنشور
                                                </a>
                                                <% } %>
                                                    <% if (!notification.is_read) { %>
                                                        <button class="btn btn-sm btn-light mark-read"
                                                            data-id="<%= notification.id %>">
                                                            <i class="bi bi-check"></i>
                                                        </button>
                                                        <% } %>
                                    </div>
                                </div>
                                <% }); %>

                                    <% if (hasMoreNotifications) { %>
                                        <div class="text-center mt-4">
                                            <button id="loadMore" class="btn btn-outline-secondary"
                                                data-page="<%= currentPage %>">
                                                عرض المزيد من الإشعارات
                                            </button>
                                        </div>
                                        <% } %>
                        </div>
                        <% } else { %>
                            <div class="empty-notifications text-center p-5">
                                <i class="bi bi-bell h1 text-muted"></i>
                                <p class="mt-3 text-muted">لا توجد إشعارات جديدة</p>
                            </div>
                            <% } %>
                </div>
            </div>
        </main>

        <footer>
            <div class="container">
                مدونات آفاق | منصة للتدوين الثقافي والفكري © <%= new Date().getFullYear() %>
            </div>
        </footer>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Mark single notification as read
                document.querySelectorAll('.mark-read').forEach(button => {
                    button.addEventListener('click', async function () {
                        const notificationId = this.getAttribute('data-id');
                        const notificationItem = document.querySelector(`.notification-item[data-id="${notificationId}"]`);

                        try {
                            const response = await fetch(`/notifications/${notificationId}/read`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });

                            if (response.ok) {
                                // تحديث واجهة المستخدم
                                notificationItem.classList.remove('unread');
                                this.remove();

                                // تحديث عدد الإشعارات غير المقروءة
                                const badge = document.querySelector('.badge');
                                if (badge) {
                                    const currentCount = parseInt(badge.textContent);
                                    if (currentCount > 1) {
                                        badge.textContent = currentCount - 1;
                                    } else {
                                        badge.remove();
                                    }
                                }
                            }
                        } catch (error) {
                            console.error('حدث خطأ:', error);
                        }
                    });
                });

                // Mark all notifications as read
                const markAllReadBtn = document.getElementById('markAllRead');
                if (markAllReadBtn) {
                    markAllReadBtn.addEventListener('click', async function () {
                        try {
                            const response = await fetch('/notifications/read/all', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });

                            if (response.ok) {
                                // تحديث واجهة المستخدم
                                document.querySelectorAll('.notification-item').forEach(item => {
                                    item.classList.remove('unread');
                                });
                                document.querySelectorAll('.mark-read').forEach(button => {
                                    button.remove();
                                });

                                // إزالة البادج
                                const badge = document.querySelector('.badge');
                                if (badge) {
                                    badge.remove();
                                }
                            }
                        } catch (error) {
                            console.error('حدث خطأ:', error);
                        }
                    });
                }

                // Load more notifications
                const loadMoreBtn = document.getElementById('loadMore');
                if (loadMoreBtn) {
                    loadMoreBtn.addEventListener('click', async function () {
                        const nextPage = parseInt(this.getAttribute('data-page')) + 1;

                        try {
                            const response = await fetch(`/notifications?page=${nextPage}`);
                            if (response.ok) {
                                const data = await response.json();

                                //add new notifications to the list
                                const notificationList = document.querySelector('.notification-list');
                                data.notifications.forEach(notification => {
                                    const notificationItem = createNotificationItem(notification);
                                    notificationList.insertBefore(notificationItem, loadMoreBtn.parentNode);
                                });

                                //update the page data attribute
                                this.setAttribute('data-page', nextPage);

                                //remove load more button if no more notifications
                                if (!data.hasMore) {
                                    this.parentNode.remove();
                                }
                            }
                        } catch (error) {
                            console.error('حدث خطأ:', error);
                        }
                    });
                }

                // Function to create new notification item in the interface
                function createNotificationItem(notification) {
                    const template = document.createElement('div');
                    template.className = `notification-item ${!notification.is_read ? 'unread' : ''}`;
                    template.setAttribute('data-id', notification.id);

                    let iconHtml = '<i class="bi bi-bell"></i>';
                    if (notification.type === 'post_rejected') {
                        iconHtml = '<i class="bi bi-x-circle text-danger"></i>';
                    } else if (notification.type === 'post_approved') {
                        iconHtml = '<i class="bi bi-check-circle text-success"></i>';
                    }

                    let actionsHtml = '';
                    if (notification.post_id && notification.type === 'post_rejected') {
                        actionsHtml = `<a href="/posts/edit/${notification.post_id}" class="btn btn-sm btn-outline-primary">تعديل المنشور</a>`;
                    } else if (notification.post_id && notification.type === 'post_approved') {
                        actionsHtml = `<a href="/post/${notification.post_id}" class="btn btn-sm btn-outline-success">عرض المنشور</a>`;
                    }

                    if (!notification.is_read) {
                        actionsHtml += `<button class="btn btn-sm btn-light mark-read" data-id="${notification.id}"><i class="bi bi-check"></i></button>`;
                    }

                    const formattedDate = new Date(notification.created_at).toLocaleDateString('ar-SA', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit'
                    });

                    template.innerHTML = `
                    <div class="notification-content">
                        <div class="notification-icon">
                            ${iconHtml}
                        </div>
                        <div class="notification-text">
                            <p>${notification.message}</p>
                            <small class="text-muted">
                                <i class="bi bi-clock"></i>
                                ${formattedDate}
                            </small>
                        </div>
                    </div>
                    <div class="notification-actions">
                        ${actionsHtml}
                    </div>
                `;

                    // Add event listener for mark as read button
                    const markReadBtn = template.querySelector('.mark-read');
                    if (markReadBtn) {
                        markReadBtn.addEventListener('click', async function () {
                            const notificationId = this.getAttribute('data-id');
                            const notificationItem = document.querySelector(`.notification-item[data-id="${notificationId}"]`);

                            try {
                                const response = await fetch(`/notifications/${notificationId}/read`, {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    }
                                });

                                if (response.ok) {
                                    notificationItem.classList.remove('unread');
                                    this.remove();

                                    const badge = document.querySelector('.badge');
                                    if (badge) {
                                        const currentCount = parseInt(badge.textContent);
                                        if (currentCount > 1) {
                                            badge.textContent = currentCount - 1;
                                        } else {
                                            badge.remove();
                                        }
                                    }
                                }
                            } catch (error) {
                                console.error('حدث خطأ:', error);
                            }
                        });
                    }

                    return template;
                }
            });
        </script>
</body>

</html>